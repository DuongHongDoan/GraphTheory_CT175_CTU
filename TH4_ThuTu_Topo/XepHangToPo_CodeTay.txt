#include <stdio.h>
#define max_n 50
#define max_e 100

typedef struct {
	int n, m;
	int a[max_n][max_n];
}Graph;

void init_graph(Graph *pG, int n) {
}

void add_edge(Graph *pG, int u, int v) {
}

typedef int ElementType;
typedef struct {
	ElementType data[max_e];
	int size;
}List;

void makenullList(List *pL) {
}

void addList (List *pL, ElementType x) {
}

int getElement(List *pL, int i) {
}

void copyList(List *pL1, List *pL2) {
}

int r[max_n]; // Luu hang cua dinh
void topo_rank(Graph *pG) {
	// 1. Tinh bac vao cua cac dinh u
	int d[max_n];
	int u, x;
	for (u=1; u<=pG->n; u++) {
		// u = 1
		d[u] = 0;// d[1] = 0
		for (x=1; x<=pG->n; x++) {
			//x = 1
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 2
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 3
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 4
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 5
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 6
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 7
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 8
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 9
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 10
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 11
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 12
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
		}
		// u = 2
		d[u] = 0;// d[2] = 0
		for (x=1; x<=pG->n; x++) {
			//x = 1
			if (pG->a[x][u] != 0)// dung
				d[u]++;// d[2] = 1
			//x = 2
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 3
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 4
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 5
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 6
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 7
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 8
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 9
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 10
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 11
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 12
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
		}
		// u = 3
		d[u] = 0;// d[3] = 0
		for (x=1; x<=pG->n; x++) {
			//x = 1
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 2
			if (pG->a[x][u] != 0)// dung
				d[u]++;//d[3] = 1
			//x = 3
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 4
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 5
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 6
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 7
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 8
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 9
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 10
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 11
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 12
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
		}
		// u = 4
		d[u] = 0;// d[4] = 0
		for (x=1; x<=pG->n; x++) {
			//x = 1
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 2
			if (pG->a[x][u] != 0)// dung
				d[u]++;//d[4] = 1
			//x = 3
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 4
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 5
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 6
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 7
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 8
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 9
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 10
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 11
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 12
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
		}
		// u = 5
		d[u] = 0;// d[5] = 0
		for (x=1; x<=pG->n; x++) {
			//x = 1
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 2
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 3
			if (pG->a[x][u] != 0)// dung
				d[u]++;//d[5] = 1
			//x = 4
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 5
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 6
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 7
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 8
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 9
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 10
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 11
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 12
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
		}
		// u = 6
		d[u] = 0;// d[6] = 0
		for (x=1; x<=pG->n; x++) {
			//x = 1
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 2
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 3
			if (pG->a[x][u] != 0)// dung
				d[u]++;//d[6] = 1
			//x = 4
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 5
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 6
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 7
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 8
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 9
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 10
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 11
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 12
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
		}
		// u = 7
		d[u] = 0;// d[7] = 0
		for (x=1; x<=pG->n; x++) {
			//x = 1
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 2
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 3
			if (pG->a[x][u] != 0)// dung
				d[u]++;//d[7] = 1
			//x = 4
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 5
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 6
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 7
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 8
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 9
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 10
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 11
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 12
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
		}
		// u = 8
		d[u] = 0;// d[8] = 0
		for (x=1; x<=pG->n; x++) {
			//x = 1
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 2
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 3
			if (pG->a[x][u] != 0)// dung
				d[u]++;//d[8] = 1
			//x = 4
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 5
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 6
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 7
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 8
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 9
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 10
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 11
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 12
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
		}
		// u = 9
		d[u] = 0;// d[9] = 0
		for (x=1; x<=pG->n; x++) {
			//x = 1
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 2
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 3
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 4
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 5
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 6
			if (pG->a[x][u] != 0)// dung
				d[u]++;//d[9] = 1
			//x = 7
			if (pG->a[x][u] != 0)// dung
				d[u]++;//d[9] = 2
			//x = 8
			if (pG->a[x][u] != 0)// dung
				d[u]++;//d[9] = 3
			//x = 9
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 10
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 11
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 12
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
		}
		// u = 10
		d[u] = 0;// d[10] = 0
		for (x=1; x<=pG->n; x++) {
			//x = 1
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 2
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 3
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 4
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 5
			if (pG->a[x][u] != 0)// dung
				d[u]++;//d[10] = 1
			//x = 6
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 7
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 8
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 9
			if (pG->a[x][u] != 0)// dung
				d[u]++;//d[10] = 2
			//x = 10
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 11
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 12
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
		}
		// u = 11
		d[u] = 0;// d[11] = 0
		for (x=1; x<=pG->n; x++) {
			//x = 1
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 2
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 3
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 4
			if (pG->a[x][u] != 0)// dung
				d[u]++;	//d[11] = 1
			//x = 5
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 6
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 7
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 8
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 9
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 10
			if (pG->a[x][u] != 0)// dung
				d[u]++;//d[11] = 2
			//x = 11
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 12
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
		}
		// u = 12
		d[u] = 0;// d[12] = 0
		for (x=1; x<=pG->n; x++) {
			//x = 1
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 2
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 3
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 4
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 5
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 6
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 7
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 8
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 9
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 10
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
			//x = 11
			if (pG->a[x][u] != 0)// dung
				d[u]++;	//d[12] = 1
			//x = 12
			if (pG->a[x][u] != 0)// sai
				//d[u]++;
		}
	}
	
	// 2. Khoi tao danh sach L1. Tim goc d[u]=0 dua vao danh sach L1
	List L1;
	makenullList(&L1);
	for (u=1; u<=pG->n; u++) {
		//u = 1
		if (d[u] == 0)//dung
			addList (&L1, u);// L1 = (1)
		//u = 2
		if (d[u] == 0)//sai
			//addList (&L1, u);// L1 = (1)
		//u = 3
		if (d[u] == 0)//sai
			//addList (&L1, u);// L1 = (1)
		//u = 4
		if (d[u] == 0)//sai
			//addList (&L1, u);// L1 = (1)
		//u = 5
		if (d[u] == 0)//sai
			//addList (&L1, u);// L1 = (1)
		//u = 6
		if (d[u] == 0)//sai
			//addList (&L1, u);// L1 = (1)
		//u = 7
		if (d[u] == 0)//sai
			//addList (&L1, u);// L1 = (1)
		//u = 8
		if (d[u] == 0)//sai
			//addList (&L1, u);// L1 = (1)
		//u = 9
		if (d[u] == 0)//sai
			//addList (&L1, u);// L1 = (1)
		//u = 10
		if (d[u] == 0)//sai
			//addList (&L1, u);// L1 = (1)
		//u = 11
		if (d[u] == 0)//sai
			//addList (&L1, u);// L1 = (1)
		//u = 12
		if (d[u] == 0)//sai
			//addList (&L1, u);// L1 = (1)
	}
	
	int k = 0; 
//Lan lap 1
	while (L1.size > 0) {//L1 = (1)
		makenullList(&L2);
		int i;
		for (i=1; i<=L1.size; i++) {
			//i=1
			u = getElement(&L1, i);// u = 1
			r[u] =k;// r[1] = 0
			int v;
			for (v=1; v<=pG->n; v++) {
				//v = 1
				if(pG->a[u][v] != 0){// sai
//					d[v]--;
//					if (d[v] == 0)
//						addList(&L2, v);
				}
				//v = 2
				if(pG->a[u][v] != 0){// dung
					d[v]--;// d[2] = 0
					if (d[v] == 0)// dung
						addList(&L2, v);// L2 = (2)
				}
				//v = 3
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 4
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 5
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 6
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 7
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 8
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}//v = 9
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 10
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 11
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 12
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
			}
		}
		copyList(&L1, &L2);// L1 = L2 = (2)
		k++;// k=1
	}
//Lan lap 2
	while (L1.size > 0) {//L1 = (2)
		makenullList(&L2);
		int i;
		for (i=1; i<=L1.size; i++) {
			//i=1
			u = getElement(&L1, i);// u = 2
			r[u] =k;// r[2] = 1
			int v;
			for (v=1; v<=pG->n; v++) {
				//v = 1
				if(pG->a[u][v] != 0){// sai
//					d[v]--;
//					if (d[v] == 0)
//						addList(&L2, v);
				}
				//v = 2
				if(pG->a[u][v] != 0){// sai
//					d[v]--;
//					if (d[v] == 0)
//						addList(&L2, v);
				}
				//v = 3
				if(pG->a[u][v] != 0){// dung
					d[v]--;// d[3] = 0
					if (d[v] == 0)// dung
						addList(&L2, v);// L2 = (3)
				}
				//v = 4
				if(pG->a[u][v] != 0){// dung
					d[v]--;// d[4] = 0
					if (d[v] == 0)// dung
						addList(&L2, v);// L2 = (4)
				}
				//v = 5
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 6
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 7
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 8
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}//v = 9
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 10
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 11
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 12
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
			}
		}
		copyList(&L1, &L2);// L1 = L2 = (3, 4)
		k++;// k=2
	}
//Lan lap 3
	while (L1.size > 0) {//L1 = (3, 4)
		makenullList(&L2);
		int i;
		for (i=1; i<=L1.size; i++) {
			//i=1
			u = getElement(&L1, i);// u = 3
			r[u] =k;// r[3] = 2
			int v;
			for (v=1; v<=pG->n; v++) {
				//v = 1
				if(pG->a[u][v] != 0){// sai
//					d[v]--;
//					if (d[v] == 0)
//						addList(&L2, v);
				}
				//v = 2
				if(pG->a[u][v] != 0){// sai
//					d[v]--;
//					if (d[v] == 0)
//						addList(&L2, v);
				}
				//v = 3
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[3] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (3)
				}
				//v = 4
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[4] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (4)
				}
				//v = 5
				if(pG->a[u][v] != 0){// dung
					d[v]--;// d[5] = 0
					if (d[v] == 0)// dung
						addList(&L2, v);// L2 = (5)
				}
				//v = 6
				if(pG->a[u][v] != 0){// dung
					d[v]--;// d[6] = 0
					if (d[v] == 0)// dung
						addList(&L2, v);// L2 = (5, 6)
				}
				//v = 7
				if(pG->a[u][v] != 0){// dung
					d[v]--;// d[7] = 0
					if (d[v] == 0)// dung
						addList(&L2, v);// L2 = (5, 6, 7)
				}
				//v = 8
				if(pG->a[u][v] != 0){// dung
					d[v]--;// d[8] = 0
					if (d[v] == 0)// dung
						addList(&L2, v);// L2 = (5, 6, 7, 8)
				}//v = 9
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 10
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 11
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 12
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
			}
			//i=2
			u = getElement(&L1, i);// u = 4
			r[u] =k;// r[4] = 2
			int v;
			for (v=1; v<=pG->n; v++) {
				//v = 1
				if(pG->a[u][v] != 0){// sai
//					d[v]--;
//					if (d[v] == 0)
//						addList(&L2, v);
				}
				//v = 2
				if(pG->a[u][v] != 0){// sai
//					d[v]--;
//					if (d[v] == 0)
//						addList(&L2, v);
				}
				//v = 3
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[3] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (3)
				}
				//v = 4
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[4] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (4)
				}
				//v = 5
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[3] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (3)
				}
				//v = 6
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[3] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (3)
				}
				//v = 7
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[3] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (3)
				}
				//v = 8
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[3] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (3)
				}
				//v = 9
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 10
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 11
				if(pG->a[u][v] != 0){// dung
					d[v]--;// d[11] = 1
					if (d[v] == 0)// sai
					//	addList(&L2, v);// L2 = (5, 6, 7, 8)
				}
				//v = 12
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
			}
		}
		copyList(&L1, &L2);// L1 = L2 = (5, 6, 7, 8)
		k++;// k=3
	}
//Lan lap 4
	while (L1.size > 0) {//L1 = (5, 6, 7, 8)
		makenullList(&L2);
		int i;
		for (i=1; i<=L1.size; i++) {
			//i=1
			u = getElement(&L1, i);// u = 5
			r[u] =k;// r[5] = 3
			int v;
			for (v=1; v<=pG->n; v++) {
				//v = 1
				if(pG->a[u][v] != 0){// sai
//					d[v]--;
//					if (d[v] == 0)
//						addList(&L2, v);
				}
				//v = 2
				if(pG->a[u][v] != 0){// sai
//					d[v]--;
//					if (d[v] == 0)
//						addList(&L2, v);
				}
				//v = 3
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[3] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (3)
				}
				//v = 4
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[4] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (4)
				}
				//v = 5
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[5] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (5)
				}
				//v = 6
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[6] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (5, 6)
				}
				//v = 7
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[7] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (5, 6, 7)
				}
				//v = 8
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[8] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (5, 6, 7, 8)
				}
				//v = 9
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 10
				if(pG->a[u][v] != 0){// dung
					d[v]--;// d[10] = 1
					if (d[v] == 0)// sai
//						addList(&L2, v);// L2 = (2)
				}
				//v = 11
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 12
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
			}
			//i=2
			u = getElement(&L1, i);// u = 6
			r[u] =k;// r[6] = 2
			int v;
			for (v=1; v<=pG->n; v++) {
				//v = 1
				if(pG->a[u][v] != 0){// sai
//					d[v]--;
//					if (d[v] == 0)
//						addList(&L2, v);
				}
				//v = 2
				if(pG->a[u][v] != 0){// sai
//					d[v]--;
//					if (d[v] == 0)
//						addList(&L2, v);
				}
				//v = 3
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[3] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (3)
				}
				//v = 4
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[4] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (4)
				}
				//v = 5
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[3] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (3)
				}
				//v = 6
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[3] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (3)
				}
				//v = 7
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[3] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (3)
				}
				//v = 8
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[3] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (3)
				}
				//v = 9
				if(pG->a[u][v] != 0){// dung
					d[v]--;// d[9] = 2
					if (d[v] == 0)// sai
//						addList(&L2, v);// L2 = (2)
				}
				//v = 10
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 11
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[11] = 1
//					if (d[v] == 0)// sai
//					//	addList(&L2, v);// L2 = (5, 6, 7, 8)
				}
				//v = 12
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
			}
			//i=3
			u = getElement(&L1, i);// u = 7
			r[u] =k;// r[7] = 3
			int v;
			for (v=1; v<=pG->n; v++) {
				//v = 1
				if(pG->a[u][v] != 0){// sai
//					d[v]--;
//					if (d[v] == 0)
//						addList(&L2, v);
				}
				//v = 2
				if(pG->a[u][v] != 0){// sai
//					d[v]--;
//					if (d[v] == 0)
//						addList(&L2, v);
				}
				//v = 3
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[3] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (3)
				}
				//v = 4
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[4] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (4)
				}
				//v = 5
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[5] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (5)
				}
				//v = 6
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[6] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (5, 6)
				}
				//v = 7
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[7] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (5, 6, 7)
				}
				//v = 8
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[8] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (5, 6, 7, 8)
				}
				//v = 9
				if(pG->a[u][v] != 0){// dung
					d[v]--;// d[9] = 1
					if (d[v] == 0)// sai
//						addList(&L2, v);// L2 = (2)
				}
				//v = 10
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 11
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 12
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
			}
			//i=4
			u = getElement(&L1, i);// u = 8
			r[u] =k;// r[8] = 3
			int v;
			for (v=1; v<=pG->n; v++) {
				//v = 1
				if(pG->a[u][v] != 0){// sai
//					d[v]--;
//					if (d[v] == 0)
//						addList(&L2, v);
				}
				//v = 2
				if(pG->a[u][v] != 0){// sai
//					d[v]--;
//					if (d[v] == 0)
//						addList(&L2, v);
				}
				//v = 3
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[3] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (3)
				}
				//v = 4
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[4] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (4)
				}
				//v = 5
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[3] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (3)
				}
				//v = 6
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[3] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (3)
				}
				//v = 7
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[3] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (3)
				}
				//v = 8
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[3] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (3)
				}
				//v = 9
				if(pG->a[u][v] != 0){// dung
					d[v]--;// d[9] = 0
					if (d[v] == 0)// dung
						addList(&L2, v);// L2 = (9)
				}
				//v = 10
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 11
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[11] = 1
//					if (d[v] == 0)// sai
//					//	addList(&L2, v);// L2 = (5, 6, 7, 8)
				}
				//v = 12
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
			}
		}
		copyList(&L1, &L2);// L1 = L2 = (9)
		k++;// k=4
	}
//Lan lap 5
	while (L1.size > 0) {//L1 = (9)
		makenullList(&L2);
		int i;
		for (i=1; i<=L1.size; i++) {
			//i=1
			u = getElement(&L1, i);// u = 9
			r[u] =k;// r[9] = 4
			int v;
			for (v=1; v<=pG->n; v++) {
				//v = 1
				if(pG->a[u][v] != 0){// sai
//					d[v]--;
//					if (d[v] == 0)
//						addList(&L2, v);
				}
				//v = 2
				if(pG->a[u][v] != 0){// sai
//					d[v]--;
//					if (d[v] == 0)
//						addList(&L2, v);
				}
				//v = 3
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[3] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (3)
				}
				//v = 4
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[4] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (4)
				}
				//v = 5
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 6
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 7
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 8
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}//v = 9
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 10
				if(pG->a[u][v] != 0){// dung
					d[v]--;// d[10] = 0
					if (d[v] == 0)// dung
						addList(&L2, v);// L2 = (10)
				}
				//v = 11
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 12
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
			}
		}
		copyList(&L1, &L2);// L1 = L2 = (10)
		k++;// k=5
	}
//Lan lap 6
	while (L1.size > 0) {//L1 = (10)
		makenullList(&L2);
		int i;
		for (i=1; i<=L1.size; i++) {
			//i=1
			u = getElement(&L1, i);// u = 10
			r[u] =k;// r[10] = 5
			int v;
			for (v=1; v<=pG->n; v++) {
				//v = 1
				if(pG->a[u][v] != 0){// sai
//					d[v]--;
//					if (d[v] == 0)
//						addList(&L2, v);
				}
				//v = 2
				if(pG->a[u][v] != 0){// sai
//					d[v]--;
//					if (d[v] == 0)
//						addList(&L2, v);
				}
				//v = 3
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[3] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (3)
				}
				//v = 4
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[4] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (4)
				}
				//v = 5
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 6
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 7
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 8
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}//v = 9
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 10
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 11
				if(pG->a[u][v] != 0){// dung
					d[v]--;// d[11] = 0
					if (d[v] == 0)// dung
						addList(&L2, v);// L2 = (11)
				}
				//v = 12
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
			}
		}
		copyList(&L1, &L2);// L1 = L2 = (11)
		k++;// k=6
	}
//Lan lap 7
	while (L1.size > 0) {//L1 = (11)
		makenullList(&L2);
		int i;
		for (i=1; i<=L1.size; i++) {
			//i=1
			u = getElement(&L1, i);// u = 11
			r[u] =k;// r[11] = 6
			int v;
			for (v=1; v<=pG->n; v++) {
				//v = 1
				if(pG->a[u][v] != 0){// sai
//					d[v]--;
//					if (d[v] == 0)
//						addList(&L2, v);
				}
				//v = 2
				if(pG->a[u][v] != 0){// sai
//					d[v]--;
//					if (d[v] == 0)
//						addList(&L2, v);
				}
				//v = 3
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[3] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (3)
				}
				//v = 4
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[4] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (4)
				}
				//v = 5
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 6
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 7
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 8
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}//v = 9
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 10
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 11
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[11] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (11)
				}
				//v = 12
				if(pG->a[u][v] != 0){// dung
					d[v]--;// d[12] = 0
					if (d[v] == 0)// dung
						addList(&L2, v);// L2 = (12)
				}
			}
		}
		copyList(&L1, &L2);// L1 = L2 = (12)
		k++;// k=7
	}
//Lan lap 8
	while (L1.size > 0) {//L1 = (12)
		makenullList(&L2);
		int i;
		for (i=1; i<=L1.size; i++) {
			//i=1
			u = getElement(&L1, i);// u = 12
			r[u] =k;// r[12] = 7
			int v;
			for (v=1; v<=pG->n; v++) {
				//v = 1
				if(pG->a[u][v] != 0){// sai
//					d[v]--;
//					if (d[v] == 0)
//						addList(&L2, v);
				}
				//v = 2
				if(pG->a[u][v] != 0){// sai
//					d[v]--;
//					if (d[v] == 0)
//						addList(&L2, v);
				}
				//v = 3
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[3] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (3)
				}
				//v = 4
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[4] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (4)
				}
				//v = 5
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 6
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 7
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 8
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}//v = 9
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 10
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
				//v = 11
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[11] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (11)
				}
				//v = 12
				if(pG->a[u][v] != 0){// sai
//					d[v]--;// d[2] = 0
//					if (d[v] == 0)// dung
//						addList(&L2, v);// L2 = (2)
				}
			}
		}
		copyList(&L1, &L2);// L1 = L2 = ()
		k++;// k=8
	}
//Lan lap 9
	while (L1.size > 0) {//sai, L1 = (0)
		
	}
}
